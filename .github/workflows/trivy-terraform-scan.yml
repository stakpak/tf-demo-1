name: Trivy Terraform Security Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**.tf"
      - "**.tfvars"
      - "**.hcl"
  push:
    branches: [main, master]
    paths:
      - "**.tf"
      - "**.tfvars"
      - "**.hcl"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  trivy-terraform-scan:
    name: Trivy Terraform Scan & Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Trivy Terraform scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: "."
          format: "json"
          output: "trivy-results.json"
          exit-code: "0" # Don't fail the job on findings

      # - name: Upload Trivy scan results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-results
      #     path: trivy-results.json

      - name: Analyze and Prioritize Trivy Findings
        uses: stakpak/stakpak-action@v1.0.7
        with:
          api_key: ${{ secrets.STAKPAK_API_KEY }}
          prompt: |
            Review this Terraform code for security vulnerabilities and best practices violations,
            then write a summary of the findings and provide a list of recommendations for fixing the issues.
          max_steps: 10
          verbose: true
          workdir: .

      # - name: Comment PR with Analysis
      #   if: github.event_name == 'pull_request'
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const fs = require('fs');

      #       // Try to read the stakpak output (it should be in the workspace)
      #       let analysisContent = '';
      #       try {
      #         // The stakpak action should have created output files
      #         const files = fs.readdirSync('.');
      #         const outputFile = files.find(f => f.includes('stakpak') || f.includes('analysis'));
      #         if (outputFile) {
      #           analysisContent = fs.readFileSync(outputFile, 'utf8');
      #         }
      #       } catch (error) {
      #         console.log('Could not find stakpak analysis output');
      #       }

      #       const comment = `## üîç Trivy Terraform Security Analysis

      #       ${analysisContent || 'Analysis completed - check the job logs for detailed findings.'}

      #       ---
      #       üí° **Tip**: For better prioritization, provide business context when running this workflow manually:
      #       - Go to Actions ‚Üí Trivy Terraform Security Scan ‚Üí Run workflow
      #       - Add context like: "Production payment system with PCI compliance requirements"
      #       `;

      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: comment
      #       });
